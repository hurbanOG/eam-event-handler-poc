version: '3'
services:

  #Zookeper container for kafka.
  zookeeper:
    container_name: Zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - 22181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  #Kafka stream container
  kafka:
    container_name: Kafka
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - 29092:9092
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  #Schema Registry for kafka avro schemas.
  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:7.4.0
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_DEBUG: "true"


  #Temporary container to initialize kafka and creates the topics.
  init-kafka:
    container_name: TEMP_init-kafka
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - kafka
    command: >
      sh -c "echo Waiting for Kafka to be ready... && \
             cub kafka-ready -z zookeeper:2181 1 30 && \
            kafka-topics --create --bootstrap-server kafka:29092 --topic plc_record_events --partitions 1 --replication-factor 1 --if-not-exists \
             kafka-topics --create --bootstrap-server kafka:29092 --topic eam_task_events --partitions 1 --replication-factor 1 --if-not-exists"

  #Temporary container to register the avro schemas in the schema-registry.
  register-schemas:
    container_name: TEMP_register-schemas
    image: dwdraju/alpine-curl-jq
    depends_on:
      - schema-registry
    environment:
      SCHEMA_REGISTRY_URL: schema-registry:8081
    working_dir: /avro
    volumes:
      - ./register-schemas.sh:/avro/register-schemas.sh
      - ../src/main/resources/avro-schemas:/avro/avro-schemas/from-src
    command: ./register-schemas.sh

  #GUI Tool for schema registry.
  schema-registry-ui:
    container_name: schema-registry-ui
    image: landoop/schema-registry-ui:0.9.5
    depends_on:
      - schema-registry
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
    ports:
      - 8000:8000

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021